# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "../ubuntu-19.10-base-i3.virtualbox.box"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
     # Display the VirtualBox GUI when booting the machine
     vb.name = "DENG-I-Airflow"
	 
	 # Display settings
	 vb.gui = true
	 vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
		# Change values below for a different startup resolution of the box
	 vb.customize ['setextradata', :id, 'GUI/LastGuestSizeHint','1280,800']

	 # Change the memory and amount of CPUS for the vm
	 vb.cpus = 2
	 vb.memory = "2096" 
	 
	 # Enable copy paste and drag and drop between host and vm
	 vb.customize ["modifyvm", :id, "--clipboard-mode", "bidirectional"]
     vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
    
	 
	 # Performance improvements
	 vb.customize ["modifyvm", :id, "--spec-ctrl", "off"]
	 vb.customize ['modifyvm', :id, '--accelerate3d', 'on']
     vb.customize ['modifyvm', :id, '--vram', '256']
     vb.customize ['modifyvm', :id, '--bioslogofadein', 'off']
     vb.customize ['modifyvm', :id, '--bioslogofadeout', 'off']
     vb.customize ['modifyvm', :id, '--bioslogodisplaytime', '100']
	 vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    
   end
	
	
	
	
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
   # install guest additions again
   sudo apt update
   sudo apt install -y -q virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11	
   sudo update-alternatives --install /usr/bin/x-session-manager x-session-manager /usr/bin/i3 60

   wget https://repo.continuum.io/archive/Anaconda3-2019.10-Linux-x86_64.sh
   sudo -u vagrant bash Anaconda3-2019.10-Linux-x86_64.sh -b -p /home/vagrant/anaconda > anaconda_log.txt
   rm Anaconda3-2019.10-Linux-x86_64.sh
   sudo -u vagrant echo "export PATH=/home/vagrant/anaconda/bin:$PATH" >> .bashrc
   sudo -u vagrant echo "setxkbmap ch" >> .bashrc
   #setxkbmap ch de_mac 
   sudo -u vagrant source .bashrc
   sudo -u vagrant /home/vagrant/anaconda/bin/conda init
   sudo apt install -y -q firefox
   sudo apt install -y -q snapd
   sudo snap install pycharm-community --classic
   
   
   sudo -u vagrant mkdir -p /home/vagrant/.config/i3
   
  SHELL
  
  config.vm.provision "file", source: "config", destination: "/home/vagrant/.config/i3/config"
  config.vm.provision "file", source: "bg.jpg", destination: "/home/vagrant/bg.jpg"
  
end
